services:
  node1:
    build:
      context: .
      dockerfile: dev.Dockerfile
    environment:
      - NODE_ID=78d8da30-177a-46bc-91d4-187d57bba3ee
      - OTHER_NODES=925ef920-abb4-4a20-8149-0a09d79fb538,http://node2:8080;5f09161c-b05e-4af3-860d-ddae47ad637d,http://node3:8080
      - NODE_INTERVAL_SCALAR=50
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 3s
  node2:
    build:
      context: .
      dockerfile: dev.Dockerfile
    environment:
      - NODE_ID=925ef920-abb4-4a20-8149-0a09d79fb538
      - OTHER_NODES=78d8da30-177a-46bc-91d4-187d57bba3ee,http://node1:8080;5f09161c-b05e-4af3-860d-ddae47ad637d,http://node3:8080
      - NODE_INTERVAL_SCALAR=50
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 3s
  node3:
    build:
      context: .
      dockerfile: dev.Dockerfile
    environment:
      - NODE_ID=5f09161c-b05e-4af3-860d-ddae47ad637d
      - OTHER_NODES=78d8da30-177a-46bc-91d4-187d57bba3ee,http://node1:8080;925ef920-abb4-4a20-8149-0a09d79fb538,http://node2:8080
      - NODE_INTERVAL_SCALAR=50
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 3s
  # client:
  #   working_dir: /app
  #   user: 1000:100
  #   environment:
  #   - NODE_URLS=http://node1:8080,http://node2:8080,http://node3:8080
  #   volumes:
  #   - ./:/app
  #   command: dotnet watch --project WebRaftSimNetworked
  #   ports:
  #   - 5000:8080
    